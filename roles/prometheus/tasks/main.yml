---
- name: Create prometheus user
  user:
    name: "{{ prometheus_user }}"
    system: yes
    shell: /bin/false
    createhome: yes

- name: Create directories for Prometheus
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
  loop:
    - /etc/prometheus
    - /var/lib/prometheus

- name: Download Prometheus archive
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"


- name: Extract Prometheus
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: Install Prometheus binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    mode: '0755'
    remote_src: yes
  loop:
    - prometheus
    - promtool

- name: Deploy Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
  notify: restart prometheus

- name: Deploy Prometheus systemd unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: restart prometheus

- name: Reload & start Prometheus
  block:
    - systemd:
        daemon_reload: yes
    - systemd:
        name: prometheus
        enabled: yes
        state: started
  when: ansible_service_mgr == 'systemd'

- name: Launch Prometheus manually if not under systemd
  shell: |
    pkill prometheus || true
    nohup prometheus \
      --config.file=/etc/prometheus/prometheus.yml \
      --storage.tsdb.path=/var/lib/prometheus \
      > /var/log/prometheus.log 2>&1 &
  args:
    executable: /bin/bash
  when: ansible_service_mgr != 'systemd'

- name: Wait for Prometheus to be ready
  wait_for:
    port: "{{ prometheus_port }}"
    timeout: 60
