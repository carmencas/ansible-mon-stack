---
- name: Create node_exporter user
  user:
    name: "{{ node_exporter_user | default('node_exporter') }}"
    system: yes
    shell: /bin/false
    createhome: no

- name: Download Node Exporter archive
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: "/tmp/node_exporter.tar.gz"

- name: Extract Node Exporter
  unarchive:
    src: "/tmp/node_exporter.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: Install Node Exporter binary
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    owner: "{{ node_exporter_user | default('node_exporter') }}"
    group: "{{ node_exporter_user | default('node_exporter') }}"
    mode: '0755'
    remote_src: yes

- name: Deploy Node Exporter systemd unit
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
  notify: restart node_exporter

- name: Reload & start Node Exporter (systemd)
  block:
    - systemd:
        daemon_reload: yes
    - systemd:
        name: node_exporter
        enabled: yes
        state: started
  when: ansible_service_mgr == 'systemd'

- name: Launch Node Exporter manually (Docker fallback)
  shell: |
    pkill node_exporter || true
    nohup node_exporter --web.listen-address=":{{ node_exporter_port }}" \
      > /var/log/node_exporter.log 2>&1 &
  when: ansible_service_mgr != 'systemd'
