---
- name: Create InfluxDB user
  user:
    name: "{{ influxdb_user }}"
    system: yes
    shell: /bin/false
    createhome: no

- name: Ensure HTTPS apt transport, CA certs & GPG available
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - gnupg
    state: present
    update_cache: yes

- name: Import InfluxData GPG key from keyserver
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: D8FF8E1F7DF8B07E
    state: present

- name: Add InfluxDB repository
  apt_repository:
    repo: "deb https://repos.influxdata.com/ubuntu focal stable"
    state: present

- name: Install InfluxDB
  apt:
    name: influxdb
    state: present
    update_cache: yes

- name: Create configuration directory
  file:
    path: /etc/influxdb
    state: directory
    owner: "{{ influxdb_user }}"
    group: "{{ influxdb_user }}"

- name: Configure InfluxDB
  template:
    src: influxdb.conf.j2
    dest: /etc/influxdb/influxdb.conf
    owner: "{{ influxdb_user }}"
    group: "{{ influxdb_user }}"
  notify: restart influxdb

- name: Reload systemd (if running)
  systemd:
    daemon_reload: yes
  when: ansible_service_mgr == 'systemd'

- name: Start & enable InfluxDB via systemd
  systemd:
    name: influxdb
    enabled: yes
    state: started
  when: ansible_service_mgr == 'systemd'

- name: Launch influxd manually in background (Docker fallback)
  shell: |
    pkill influxd || true
    nohup influxd --config /etc/influxdb/influxdb.conf \
      > /var/log/influxd.log 2>&1 &
  args:
    executable: /bin/bash
  when: ansible_service_mgr != 'systemd'

- name: Wait for InfluxDB to be ready
  wait_for:
    port: "{{ influxdb_port }}"
    delay: 10
    timeout: 60

- name: Create Telegraf database
  uri:
    url: "http://localhost:{{ influxdb_port }}/query"
    method: POST
    body: "q=CREATE DATABASE {{ influxdb_database }}"
    status_code: 200
  retries: 3
  delay: 5